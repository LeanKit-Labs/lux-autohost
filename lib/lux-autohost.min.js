/**
 * lux-autohost - Action Creator API for submitting logging & metrics to autohost from lux.js apps.
 * Author: Jim Cowart
 * Version: v0.2.0
 * Url: https://github.com/LeanKit-Labs/lux-autohost
 * License(s): MIT Copyright (c) 2016 LeanKit
 */
var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t};(function(t,e){"function"==typeof define&&define.amd?define(["lux.js","postal","machina","lodash","moment"],e):"object"===("undefined"==typeof module?"undefined":_typeof(module))&&module.exports?module.exports=e(require("lux.js"),require("postal"),require("machina"),require("lodash"),require("moment")):t.luxah=e(t.lux,t.postal,t.machina,t._,t.moment)})(void 0,function(t,e,n,i,o){function r(t){return t&&i.merge(l,t),l}function a(e,n){var i=n,r=t.getLogNamespace?t.getLogNamespace(e,n):"lux";return i={data:n,location:window.location.href,userAgent:window.navigator.userAgent},{namespace:r,msg:i,timestamp:o.utc().toISOString(),type:e,level:d.indexOf(e)+1}}function c(e,n){t.dispatch("sendLogEntry",a(e,n))}function s(t,e,n,i,r){return{type:t,key:e,timestamp:o.utc().toISOString(),value:n,units:i}}function u(t){return v.indexOf(t)===-1&&(!l.filter.include&&l.filter.actions.indexOf(t)===-1||l.filter.include&&l.filter.actions.indexOf(t)>-1)}function f(){var e,n,i=Array.from(arguments);return t.getContextKey?t.getContextKey.apply(t,arguments):(e=window.location.host.replace(/\./gi,"-"),n=window.location.pathname.replace(/\//gi,"-"),n="-"===n[0]?n.slice(1):n,[e,n].concat(i).join("."))}var l={actionChannel:e.channel("lux.action"),filter:{include:!1,actions:[]},metrics:{timeout:3e4,messages:500},logging:{timeout:5e3,messages:25}};t.customActionCreator({sendLogBatch:function(){var t=Array.from(arguments);l.actionChannel.publish({topic:"execute.sendLogBatch",data:{actionType:"sendLogBatch",actionArgs:t}})},sendMetricsBatch:function(){var t=Array.from(arguments);l.actionChannel.publish({topic:"execute.sendMetricsBatch",data:{actionType:"sendMetricsBatch",actionArgs:t}})}});var d=["error","warn","info","debug"],m=i.reduce(d,function(t,e){return t[e]=function(t){return c(e,t)},t},{});t.customActionCreator(m);var h={meter:function(e,n,i,o){t.dispatch("sendMetricsEntry",s("meter",e,n,i,o))},timer:function(e,n,i){t.dispatch("sendMetricsEntry",s("timer",e,n,"ms",i))}};t.customActionCreator(h);var g={action:"sendMetricsBatch",queue:[],config:l.metrics},p={action:"sendLogBatch",queue:[],config:l.logging},y=new n.BehavioralFsm({initialState:"queueing",states:{queueing:{_onEnter:function(t){var e=this;t.timeout=setTimeout(function(){return e.handle(t,"transmit")},t.config.timeout)},queueEntry:function(t,e){t.queue.push(e),t.queue.length>=t.config.messages&&this.transition(t,"transmitting")},transmit:"transmitting"},transmitting:{_onEnter:function(t){clearTimeout(t.timeout),this.handle(t,"transmit")},transmit:function(e){if(e.queue.length){var n=e.queue;e.queue=[],t.dispatch(e.action,n)}this.transition(e,"queueing")}}}}),q=t.actionListener({handlers:{sendLogEntry:function(t){y.handle(p,"queueEntry",t)},sendMetricsEntry:function(t){y.handle(g,"queueEntry",t)}}}),v=["sendLogEntry","sendMetricsEntry","sendLogBatch","sendMetricsBatch"],x=new n.Fsm({initialize:function(){var e=this;t.dispatcher.on("handling",function(t){"action.dispatch"===t.inputType&&e.handle("start",t.client.action.actionType)}),t.dispatcher.on("transition",function(t){"ready"===t.toState&&e.handle("dispatcher.complete")})},initialState:"ready",states:{ready:{_onEnter:function(){this.current={}},start:function(t){var e=this;u(t)&&(this.current={name:t,start:o.utc(),key:f(t)},setTimeout(function(){return e.handle("action.complete")},0),this.transition("processing"))}},processing:{_onEnter:function(){h.meter(this.current.key,1,"count",{})},"action.complete":"ready","*":function(){this.deferUntilTransition()},_onExit:function(){h.timer(this.current.key,o.utc().diff(this.current.start),{})}}}});return{config:r,actionProcessor:x,batchManager:y,batchListener:q,metricsClient:g,loggingClient:p}});